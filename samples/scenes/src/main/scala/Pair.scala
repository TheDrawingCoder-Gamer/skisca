// Generated by delombok at Wed Nov 13 16:00:57 EST 2024
package gay.menkissing.skisca.examples.scenes

object Pair {
  def arrayOf[A, B](a1: A, b1: B): Array[Pair[A, B]] = Array[Pair[A, B]](new Pair[A, B](a1, b1))

  def arrayOf[A, B](a1: A, b1: B, a2: A, b2: B): Array[Pair[A, B]] = Array[Pair[A, B]](new Pair[A, B](a1, b1), new Pair[A, B](a2, b2))

  def arrayOf[A, B](a1: A, b1: B, a2: A, b2: B, a3: A, b3: B): Array[Pair[A, B]] = Array[Pair[A, B]](new Pair[A, B](a1, b1), new Pair[A, B](a2, b2), new Pair[A, B](a3, b3))

  def arrayOf[A, B](a1: A, b1: B, a2: A, b2: B, a3: A, b3: B, a4: A, b4: B): Array[Pair[A, B]] = Array[Pair[A, B]](new Pair[A, B](a1, b1), new Pair[A, B](a2, b2), new Pair[A, B](a3, b3), new Pair[A, B](a4, b4))

  def arrayOf[A, B](a1: A, b1: B, a2: A, b2: B, a3: A, b3: B, a4: A, b4: B, a5: A, b5: B): Array[Pair[A, B]] = Array[Pair[A, B]](new Pair(a1, b1), new Pair(a2, b2), new Pair(a3, b3), new Pair(a4, b4), new Pair(a5, b5))

  def arrayOf[A, B](a1: A, b1: B, a2: A, b2: B, a3: A, b3: B, a4: A, b4: B, a5: A, b5: B, a6: A, b6: B): Array[Pair[A, B]] = Array[Pair[A, B]](new Pair(a1, b1), new Pair(a2, b2), new Pair(a3, b3), new Pair(a4, b4), new Pair(a5, b5), new Pair(a6, b6))

  def arrayOf[A, B](a1: A, b1: B, a2: A, b2: B, a3: A, b3: B, a4: A, b4: B, a5: A, b5: B, a6: A, b6: B, a7: A, b7: B): Array[Pair[A, B]] = Array[Pair[A, B]](new Pair(a1, b1), new Pair(a2, b2), new Pair(a3, b3), new Pair(a4, b4), new Pair(a5, b5), new Pair(a6, b6), new Pair(a7, b7))
}

case class Pair[A, B] @java.lang.SuppressWarnings(Array("all"))(first: A, second: B) {
  @java.lang.SuppressWarnings(Array("all")) def getFirst: A = this.first

  @java.lang.SuppressWarnings(Array("all")) def getSecond: B = this.second




  /**
   * @return {@code this}.
   */
  @java.lang.SuppressWarnings(Array("all")) def withFirst(_first: A): Pair[A, B] = {
    if (this.first == _first) {
      this
    } else {
      new Pair[A, B](_first, this.second)
    }
  }

  /**
   * @return {@code this}.
   */
  @java.lang.SuppressWarnings(Array("all")) def withSecond(_second: B): Pair[A, B] = {
    if (this.second == _second) {
      this
    } else {
      new Pair[A, B](this.first, _second)
    }
  }
}